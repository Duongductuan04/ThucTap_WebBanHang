@using SimpleTaskApp.MobilePhones.Dto
@using SimpleTaskApp.Areas.Admin.Models.Common.Modals
@using Microsoft.AspNetCore.Mvc.Rendering
@using SimpleTaskApp.Areas.Admin.Models.MobilePhones
@model EditMobilePhoneViewModel

@{
    Layout = null;
}

@await Html.PartialAsync(
            "~/Areas/Admin/Views/Shared/Modals/_ModalHeader.cshtml",
            new ModalHeaderViewModel(L("EditMobilePhone"))
        )
<form id="MobilePhoneEditForm" role="form" class="form-horizontal" enctype="multipart/form-data">
    <input type="hidden" name="Id" value="@Model.MobilePhone.Id" />

    <div class="modal-body">
        <!-- Name -->
        <div class="form-group row required">
            <label class="col-md-3 col-form-label" for="Name">@L("Name")</label>
            <div class="col-md-9">
                <input id="Name" name="Name" type="text" class="form-control"
                       value="@Model.MobilePhone.Name"
                       maxlength="256"
                       data-val="true"
                       data-val-required="@L("Name_Required")" />
                <span class="text-danger" data-valmsg-for="Name"></span>
            </div>
        </div>

        <!-- Brand -->
        <div class="form-group row required">
            <label class="col-md-3 col-form-label" for="Brand">@L("Brand")</label>
            <div class="col-md-9">
                <input id="Brand" name="Brand" type="text" class="form-control"
                       value="@Model.MobilePhone.Brand"
                       maxlength="128"
                       data-val="true"
                       data-val-required="@L("Brand_Required")" />
                <span class="text-danger" data-valmsg-for="Brand"></span>
            </div>
        </div>

        <!-- Description -->
        <div class="form-group row">
            <label class="col-md-3 col-form-label" for="Description">@L("Description")</label>
            <div class="col-md-9">
                <textarea id="Description" name="Description" class="form-control"
                          maxlength="500">@Model.MobilePhone.Description</textarea>
                <span class="text-danger" data-valmsg-for="Description"></span>
            </div>
        </div>

        <!-- Price -->
        <div class="form-group row required">
            <label class="col-md-3 col-form-label" for="Price">@L("Price")</label>
            <div class="col-md-9">
                <input id="Price" name="Price" type="number" class="form-control" step="0.01"
                       value="@Model.MobilePhone.Price.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)"
                       data-val="true"
                       data-val-required="@L("Price_Required")" />
                <span class="text-danger" data-valmsg-for="Price"></span>
            </div>
        </div>

        <!-- DiscountPrice -->
        <div class="form-group row">
            <label class="col-md-3 col-form-label" for="DiscountPrice">@L("DiscountPrice")</label>
            <div class="col-md-9">
                <input id="DiscountPrice" name="DiscountPrice" type="number" class="form-control" step="0.01"
                       value="@(Model.MobilePhone.DiscountPrice.HasValue
                           ? Model.MobilePhone.DiscountPrice.Value.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)
                           : string.Empty)" min="0" />
                <span class="text-danger" data-valmsg-for="DiscountPrice"></span>
            </div>
        </div>

        <!-- Category -->
        <div class="form-group row required">
            <label class="col-md-3 col-form-label" for="CategoryId">@L("Category")</label>
            <div class="col-md-9">
                @Html.DropDownList("CategoryId", Model.Categories, L("Select"),
                         new { @class = "form-control", id = "CategoryId", required = "required" })
                <span class="text-danger" data-valmsg-for="CategoryId"></span>
            </div>
        </div>

        <!-- IsNew & IsOnSale -->
        <div class="form-group row">
            <label class="col-md-3 col-form-label">@L("Flags")</label>
            <div class="col-md-9">
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" id="IsNew" name="IsNew" value="true" @(Model.MobilePhone.IsNew ? "checked" : "") />
                    <label class="form-check-label" for="IsNew">@L("New")</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" id="IsOnSale" name="IsOnSale" value="true" @(Model.MobilePhone.IsOnSale ? "checked" : "") />
                    <label class="form-check-label" for="IsOnSale">@L("OnSale")</label>
                </div>
            </div>
        </div>

        <!-- SaleStart & SaleEnd -->
        <div class="form-group row">
            <label class="col-md-3 col-form-label" for="SaleStart">@L("SaleStart")</label>
            <div class="col-md-9">
                <input id="SaleStart" name="SaleStart" type="datetime-local" class="form-control"
                       value="@(Model.MobilePhone.SaleStart?.ToString("yyyy-MM-ddTHH:mm"))"
                       pattern="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-3 col-form-label" for="SaleEnd">@L("SaleEnd")</label>
            <div class="col-md-9">
                <input id="SaleEnd" name="SaleEnd" type="datetime-local" class="form-control"
                       value="@(Model.MobilePhone.SaleEnd?.ToString("yyyy-MM-ddTHH:mm"))"
                       pattern="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}" />
            </div>
        </div>

        <!-- Current Image -->
        <div class="form-group row">
            <label class="col-md-3 col-form-label">@L("CurrentImage")</label>
            <div class="col-md-9">
                @if (!string.IsNullOrEmpty(Model.MobilePhone.ImageUrl))
                {
                    <img src="@Model.MobilePhone.ImageUrl" alt="@L("CurrentImage")"
                         style="max-width: 100px; max-height: 100px; border: 1px solid #ddd; padding: 5px;" />
                    <input type="hidden" name="ImageUrl" value="@Model.MobilePhone.ImageUrl" />
                }
                else
                {
                    <span>@L("NoImage")</span>
                }
            </div>
        </div>

        <!-- Upload New Image -->
        <div class="form-group row">
            <label class="col-md-3 col-form-label" for="ImageFile">@L("NewImage")</label>
            <div class="col-md-9">
                <input id="ImageFile" name="ImageFile" type="file" class="form-control" />
                <small class="form-text text-muted">@L("ImageUploadHint")</small>
            </div>
        </div>
        <!-- Colors -->
        <label class="col-md-3 col-form-label">@L("Colors")</label>

        <div id="editColorList">
            @if (Model.MobilePhone.Colors != null && Model.MobilePhone.Colors.Any())
            {
                foreach (var color in Model.MobilePhone.Colors)
                {
                    <div class="color-item mt-2">
                        <input type="hidden" name="ColorId" value="@color.Id" />
                        <input type="hidden" name="ExistingImageUrl" value="@color.ImageUrl" />
                        <input type="text" name="ColorName" placeholder="Tên màu" class="form-control d-inline-block" style="width:30%" value="@color.ColorName" />
                        <input type="text" name="ColorHex" placeholder="#HEX" class="form-control d-inline-block" style="width:20%" value="@color.ColorHex" />
                        <input type="file" name="ColorImage" class="form-control d-inline-block" style="width:40%" />
                        @if (!string.IsNullOrEmpty(color.ImageUrl))
                        {
                            <img src="@color.ImageUrl" style="height:30px;width:30px;margin-left:5px;" />
                        }
                        <button type="button" class="btn btn-danger btn-sm remove-color">X</button>
                    </div>
                }
            }
        </div>
        <button type="button" id="addEditColor" class="btn btn-sm btn-secondary mt-2">@L("AddColor")</button>


    </div>

    @await Html.PartialAsync("~/Areas/Admin/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml")
</form>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script src="~/view-resources/Views/MobilePhones/_EditModal.js" asp-append-version="true"></script>